#include <Arduino.h>
#include <SPI.h>
#include <U8g2lib.h>

#define meatCheckW 54
#define meatCheckH 44
#define NOTW 60
#define NOTH 60
#define exW 70
#define exH 48

// grafika miÄ™sa
static const unsigned char  meatCheckLogo[] U8X8_PROGMEM =  {  
  0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 
  0x07, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0xFF, 
  0x07, 0xC0, 0x3F, 0x00, 0x00, 0x80, 0x7F, 0x00, 0x00, 0x7F, 0x00, 0x00, 
  0xE0, 0x1F, 0x00, 0x00, 0xFC, 0x00, 0x00, 0xF0, 0x07, 0x00, 0x00, 0xF0, 
  0x01, 0x00, 0xF8, 0x01, 0x00, 0x00, 0xE0, 0x03, 0x00, 0xFC, 0x00, 0x00, 
  0x00, 0xC0, 0x07, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x80, 0x0F, 0x80, 0x1F, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x1F, 
  0xE0, 0x07, 0x00, 0x00, 0x78, 0x00, 0x1E, 0xF0, 0x03, 0x00, 0x00, 0xFE, 
  0x01, 0x1C, 0xF8, 0x01, 0x00, 0x00, 0xFF, 0x03, 0x3C, 0xF8, 0x00, 0x00, 
  0x00, 0xFF, 0x07, 0x3C, 0x7C, 0x00, 0x00, 0x80, 0x8F, 0x07, 0x38, 0x3E, 
  0x00, 0x00, 0x80, 0x07, 0x07, 0x38, 0x1F, 0x00, 0x00, 0x80, 0x03, 0x07, 
  0x38, 0x0F, 0x00, 0x00, 0x80, 0x07, 0x07, 0x38, 0x0F, 0x00, 0x00, 0x80, 
  0x8F, 0x07, 0x38, 0x07, 0x00, 0x00, 0x00, 0xFF, 0x07, 0x38, 0x07, 0x00, 
  0x00, 0x00, 0xFF, 0x03, 0x38, 0x07, 0x00, 0x00, 0x00, 0xFE, 0x01, 0x38, 
  0x07, 0x00, 0x00, 0x00, 0x78, 0x00, 0x38, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x38, 0x07, 0xE0, 0x03, 0x00, 0x00, 0x00, 0x3C, 0x0F, 0xFF, 0x3F, 
  0x00, 0x00, 0x00, 0x3E, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x3F, 0xFF, 
  0xFF, 0xFF, 0x03, 0x00, 0x80, 0x3F, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0xC0, 
  0x3F, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0xF0, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x00, 0xFC, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0x3F, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 
  0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0xFC, 0x1F, 0xFE, 0xFF, 0xFF, 
  0xFF, 0x0F, 0xF8, 0x01, 0xE0, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x80, 
  0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x01, 0x00, 
  0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x0F, 0x00,  };

static const unsigned char  NOTlogo[] U8X8_PROGMEM ={
  0x00, 0x00, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 
  0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x03, 0xFC, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 
  0xFF, 0x1F, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 
  0x00, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0x0C, 0x00, 0x80, 0xFF, 0xFF, 0x01, 
  0xF8, 0xFF, 0x1F, 0x00, 0xC0, 0xFF, 0x3F, 0x00, 0xC0, 0xFF, 0x3F, 0x00, 
  0xE0, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x7F, 0x00, 0xE0, 0xFF, 0x07, 0x00, 
  0x00, 0xFE, 0x7F, 0x00, 0xF0, 0xFF, 0x01, 0x00, 0x00, 0xF8, 0xFF, 0x00, 
  0xF8, 0xFF, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x01, 0xF8, 0x7F, 0x00, 0x00, 
  0x00, 0xE0, 0xFF, 0x01, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x00, 
  0xE0, 0xBF, 0xC3, 0xE1, 0xF1, 0x9F, 0x7F, 0x00, 0xE0, 0x9F, 0xC3, 0xF9, 
  0xF7, 0x9F, 0x7F, 0x00, 0xE0, 0x8F, 0xC3, 0xF9, 0xF7, 0x1F, 0x7F, 0x00, 
  0xF0, 0x8F, 0xC7, 0x39, 0x87, 0x03, 0xFF, 0x00, 0xF0, 0x87, 0xC7, 0x1D, 
  0x8E, 0x03, 0xFE, 0x00, 0xF8, 0x87, 0xC7, 0x1D, 0x8E, 0x03, 0xFE, 0x01, 
  0xF8, 0x87, 0xCF, 0x1D, 0x8E, 0x03, 0xFE, 0x01, 0xFF, 0x87, 0xCF, 0x1D, 
  0x8E, 0x03, 0xFC, 0x0F, 0xFF, 0x83, 0xCF, 0x1D, 0x8E, 0x03, 0xFC, 0x0F, 
  0xFF, 0x83, 0xDF, 0x1D, 0x8E, 0x03, 0xFC, 0x0F, 0xFF, 0x83, 0xDF, 0x1D, 
  0x8E, 0x03, 0xFC, 0x0F, 0xFF, 0x83, 0xDF, 0x1D, 0x8E, 0x03, 0xFC, 0x0F, 
  0xFF, 0x83, 0xDB, 0x1D, 0x8E, 0x03, 0xFC, 0x0F, 0xFF, 0x83, 0xFB, 0x1D, 
  0x8E, 0x03, 0xFC, 0x0F, 0xFF, 0x83, 0xFB, 0x1D, 0x8E, 0x03, 0xFC, 0x0F, 
  0xFF, 0x83, 0xF3, 0x1D, 0x8E, 0x03, 0xFC, 0x0F, 0xFF, 0x87, 0xF3, 0x1D, 
  0x8E, 0x03, 0xFC, 0x0F, 0xF8, 0x87, 0xF3, 0x1D, 0x8E, 0x03, 0xFE, 0x01, 
  0xF8, 0x87, 0xE3, 0x1D, 0x8E, 0x03, 0xFE, 0x01, 0xF0, 0x87, 0xE3, 0x1D, 
  0x8E, 0x03, 0xFE, 0x00, 0xF0, 0x8F, 0xE3, 0x39, 0x87, 0x03, 0xFF, 0x00, 
  0xE0, 0x8F, 0xC3, 0xF9, 0x87, 0x03, 0x7F, 0x00, 0xE0, 0x9F, 0xC3, 0xF9, 
  0x87, 0x83, 0x7F, 0x00, 0xE0, 0x3F, 0x00, 0xE0, 0x01, 0x80, 0x7F, 0x00, 
  0xE0, 0x3F, 0x00, 0x00, 0x00, 0xC0, 0x7F, 0x00, 0xF8, 0x7F, 0x00, 0x00, 
  0x00, 0xE0, 0xFF, 0x01, 0xF8, 0xFF, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0x01, 
  0xF0, 0xFF, 0x01, 0x00, 0x00, 0xF8, 0xFF, 0x00, 0xE0, 0xFF, 0x07, 0x00, 
  0x00, 0xFE, 0x7F, 0x00, 0xE0, 0xFF, 0x0F, 0x00, 0x00, 0xFF, 0x7F, 0x00, 
  0xC0, 0xFF, 0x3F, 0x00, 0xC0, 0xFF, 0x3F, 0x00, 0x80, 0xFF, 0xFF, 0x01, 
  0xF8, 0xFF, 0x1F, 0x00, 0x00, 0xF3, 0xFF, 0xFF, 0xFF, 0xFF, 0x0C, 0x00, 
  0x00, 0xC0, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 
  0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x07, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 
  0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 
  0x00, 0x00, 0xFE, 0x03, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 
  0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x18, 0x00, 0x00, 0x00,  };

static const unsigned char  exLogo[] U8X8_PROGMEM = {
  0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x3C, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1F, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 
  0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0xC0, 0x1F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0xE0, 0x0F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xFC, 0x01, 0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x03, 
  0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x07, 0xF8, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF0, 0x0F, 0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 
  0xFC, 0x01, 0xC0, 0x3F, 0x00, 0xFF, 0x00, 0xE0, 0x0F, 0xFE, 0x01, 0xC0, 
  0x7F, 0x80, 0xFF, 0x00, 0xE0, 0x1F, 0xFE, 0x01, 0xC0, 0xFF, 0xC0, 0xFF, 
  0x00, 0xE0, 0x1F, 0xFE, 0x00, 0xC0, 0xFF, 0xE1, 0xFF, 0x00, 0xC0, 0x1F, 
  0xFE, 0x00, 0xC0, 0xFF, 0xF3, 0xFF, 0x00, 0xC0, 0x1F, 0xFE, 0x00, 0x00, 
  0xFC, 0xFF, 0x0F, 0x00, 0xC0, 0x1F, 0xFF, 0x00, 0x00, 0xF8, 0xFF, 0x07, 
  0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 0xF0, 0xFF, 0x03, 0x00, 0xC0, 0x3F, 
  0xFF, 0x00, 0x00, 0xE0, 0xFF, 0x01, 0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 
  0xC0, 0xFF, 0x00, 0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 0xC0, 0xFF, 0x00, 
  0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 0xC0, 0xFF, 0x00, 0x00, 0xC0, 0x3F, 
  0xFF, 0x00, 0x00, 0xC0, 0xFF, 0x00, 0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 
  0xC0, 0xFF, 0x00, 0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 0xC0, 0xFF, 0x00, 
  0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 0xE0, 0xFF, 0x01, 0x00, 0xC0, 0x3F, 
  0xFF, 0x00, 0x00, 0xF0, 0xFF, 0x03, 0x00, 0xC0, 0x3F, 0xFF, 0x00, 0x00, 
  0xF8, 0xFF, 0x07, 0x00, 0xC0, 0x3F, 0xFE, 0x00, 0x00, 0xFC, 0xFF, 0x0F, 
  0x00, 0xC0, 0x1F, 0xFE, 0x00, 0xC0, 0xFF, 0xF3, 0xFF, 0x00, 0xC0, 0x1F, 
  0xFE, 0x00, 0xC0, 0xFF, 0xE1, 0xFF, 0x00, 0xC0, 0x1F, 0xFE, 0x01, 0xC0, 
  0xFF, 0xC0, 0xFF, 0x00, 0xE0, 0x1F, 0xFE, 0x01, 0xC0, 0x7F, 0x80, 0xFF, 
  0x00, 0xE0, 0x1F, 0xFC, 0x01, 0xC0, 0x3F, 0x00, 0xFF, 0x00, 0xE0, 0x0F, 
  0xFC, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x0F, 0xFC, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0xF8, 0x03, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xF0, 0x07, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x07, 
  0xF0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x03, 0xE0, 0x0F, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xFC, 0x01, 0xC0, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0xFE, 0x00, 0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 
  0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x3E, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x0F, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 
  };

  

/* Constructor */
U8G2_SSD1306_128X64_NONAME_2_HW_I2C u8g2(U8G2_R0);
/* u8x8.begin() is required and will sent the setup/init sequence to the display */
void setup(void)
{
  u8g2.begin();
}

void loop(void) {
  u8g2.firstPage();
  do {
    u8g2.setFont(u8g2_font_bitcasual_t_all);
    u8g2.drawXBMP(36, 2, meatCheckW, meatCheckH, meatCheckLogo);
    u8g2.drawStr(30,64,"MeatChech+");
  } while ( u8g2.nextPage() );
  delay(1000);

  u8g2.firstPage();
  do {
    u8g2.drawXBMP(34, 2, NOTW, NOTH, NOTlogo);
  } while ( u8g2.nextPage() );
  delay(1000);
  
  u8g2.firstPage();
  do {
    u8g2.drawXBMP(29, 8, exW, exH, exLogo);
  } while ( u8g2.nextPage() );
  delay(1000);

}
